<?phpclass Site extends PageController{	public function index()	{		// Attaching a block to this view		// see index.tpl.php for how to display the block		$this->attachBlock('forumThreads', 'Forums', 'Forum', 'ActivityOverview', array(6));		// Loading additional css file used for the forum block		// This can however also be done in the block itself.		// Just for demonstration purposes		Css::addFile('/css/forum.css');		// specify the view to be used for this function		$this->view('index.tpl.php');		// If not specified, the default layout will be used		// the default layout view can also be modified, but then there		// will be no layout controller available.		// default view is usr/layout/view/template.tpl.php		// The view for Layouts->FrontPage is specified		// in Layouts Controller in the function 'FrontPage'		// This function loads the login/logout block		$this->layout('Layouts', 'FrontPage');	}	public function lang($lang = 'en')	{		// TODO: this needs a helper class so we do not access		// namespaced core classes.		// possibly integrate language switcher into framework core		// and set url path to switch in conf.php		// so it is transparent to the user/programmer		\Core\Init\CoreLanguage::changeLanguage($lang);		// Do not render this function (no view, no layout)		$this->render = false;		// Set language to the core part of the xml file		// This is only needed for the language switcher		// as the define is in core/		//		// Note: language is available in every function and ready to		// use without specifying a section. As every function has its		// own block in the xml file.		//		// The language switcher function (this one here) will be moved to		// framework core anyway, so there is no need to wonder here		$this->language->setCore('changeLanguage');		// get title and text from language xml		$title	= $this->language->title;		$body	= $this->language->text;		// On access of this function, redirect to the homepage		// Delay 5 seconds and display headline and text		$this->redirectDelayedHome($title, $body, 5);	}}?>